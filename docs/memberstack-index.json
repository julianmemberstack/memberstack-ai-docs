{
  "version": "2.0.0",
  "totalMethods": 36,
  "lastUpdated": "2025-01-11",
  "categories": {
    "authentication": {
      "description": "Methods for user authentication and session management",
      "methods": [
        {
          "name": "loginMemberEmailPassword",
          "signature": "loginMemberEmailPassword({ email: string, password: string })",
          "returns": "Promise<LoginMemberEmailPasswordPayload>",
          "description": "Authenticate member with email and password",
          "docLocation": "complete.md#L777"
        },
        {
          "name": "signupMemberEmailPassword",
          "signature": "signupMemberEmailPassword({ email: string, password: string, customFields?: object, metaData?: object, plans?: PlanConnection[] })",
          "returns": "Promise<SignupMemberEmailPasswordPayload>",
          "description": "Create new member account with email and password",
          "docLocation": "complete.md#L902"
        },
        {
          "name": "logout",
          "signature": "logout()",
          "returns": "Promise<void>",
          "description": "Sign out the current member",
          "docLocation": "complete.md#L1011"
        },
        {
          "name": "sendMemberLoginPasswordlessEmail",
          "signature": "sendMemberLoginPasswordlessEmail({ email: string })",
          "returns": "Promise<SendMemberLoginPasswordlessEmailPayload>",
          "description": "Send passwordless login email",
          "docLocation": "complete.md#L1067"
        },
        {
          "name": "loginMemberPasswordless",
          "signature": "loginMemberPasswordless({ passwordlessToken: string, email: string })",
          "returns": "Promise<LoginWithPasswordlessPayload>",
          "description": "Complete passwordless login with token",
          "docLocation": "complete.md#L1100"
        },
        {
          "name": "loginWithProvider",
          "signature": "loginWithProvider({ provider: 'google' | 'facebook' | 'github' })",
          "returns": "Promise<void>",
          "description": "Initiate social login flow",
          "docLocation": "complete.md#L1147"
        },
        {
          "name": "signupWithProvider",
          "signature": "signupWithProvider({ provider: 'google' | 'facebook' | 'github', plans?: PlanConnection[] })",
          "returns": "Promise<void>",
          "description": "Create account via social provider",
          "docLocation": "complete.md#L1197"
        },
        {
          "name": "onAuthChange",
          "signature": "onAuthChange(callback: (member: Member | null) => void)",
          "returns": "() => void",
          "description": "Listen for authentication state changes",
          "docLocation": "complete.md#L1232"
        },
        {
          "name": "sendMemberResetPasswordEmail",
          "signature": "sendMemberResetPasswordEmail({ email: string })",
          "returns": "Promise<SendMemberResetPasswordEmailPayload>",
          "description": "Send password reset email",
          "docLocation": "complete.md#L4435"
        },
        {
          "name": "resetMemberPassword",
          "signature": "resetMemberPassword({ token: string, newPassword: string })",
          "returns": "Promise<ResetMemberPasswordPayload>",
          "description": "Reset password with token",
          "docLocation": "complete.md#L4512"
        },
        {
          "name": "sendMemberVerificationEmail",
          "signature": "sendMemberVerificationEmail()",
          "returns": "Promise<SendMemberVerificationEmailPayload>",
          "description": "Send email verification",
          "docLocation": "complete.md#L4232"
        }
      ]
    },
    "members": {
      "description": "Methods for managing member profiles and data",
      "methods": [
        {
          "name": "getCurrentMember",
          "signature": "getCurrentMember()",
          "returns": "Promise<{ data: Member | null }>",
          "description": "Get currently authenticated member",
          "docLocation": "complete.md#L1558"
        },
        {
          "name": "updateMember",
          "signature": "updateMember({ customFields?: object, metaData?: object })",
          "returns": "Promise<UpdateMemberPayload>",
          "description": "Update member profile data",
          "docLocation": "complete.md#L1713"
        },
        {
          "name": "updateMemberProfileImage",
          "signature": "updateMemberProfileImage({ image: File })",
          "returns": "Promise<UpdateProfileImagePayload>",
          "description": "Update member profile picture",
          "docLocation": "complete.md#L1927"
        },
        {
          "name": "updateMemberAuth",
          "signature": "updateMemberAuth({ email?: string, oldPassword?: string, newPassword?: string })",
          "returns": "Promise<UpdateMemberAuthPayload>",
          "description": "Update authentication credentials",
          "docLocation": "complete.md#L1986"
        },
        {
          "name": "getMemberJSON",
          "signature": "getMemberJSON()",
          "returns": "Promise<object>",
          "description": "Get member data as JSON",
          "docLocation": "complete.md#L2098"
        },
        {
          "name": "updateMemberJSON",
          "signature": "updateMemberJSON(json: object)",
          "returns": "Promise<UpdateMemberJSONPayload>",
          "description": "Update member JSON data",
          "docLocation": "complete.md#L2120"
        },
        {
          "name": "deleteMember",
          "signature": "deleteMember()",
          "returns": "Promise<DeleteMemberPayload>",
          "description": "Permanently delete member account",
          "docLocation": "complete.md#L2162"
        }
      ]
    },
    "plans": {
      "description": "Methods for subscription and billing management",
      "methods": [
        {
          "name": "getPlans",
          "signature": "getPlans()",
          "returns": "Promise<{ data: Plan[] }>",
          "description": "Get all available plans",
          "docLocation": "complete.md#L2462"
        },
        {
          "name": "getPlan",
          "signature": "getPlan({ planId: string })",
          "returns": "Promise<{ data: Plan }>",
          "description": "Get specific plan details",
          "docLocation": "complete.md#L2592"
        },
        {
          "name": "addPlan",
          "signature": "addPlan({ planId: string })",
          "returns": "Promise<AddPlanPayload>",
          "description": "Add plan to member (free plans only)",
          "docLocation": "complete.md#L2633"
        },
        {
          "name": "removePlan",
          "signature": "removePlan({ planId: string })",
          "returns": "Promise<RemovePlanPayload>",
          "description": "Remove plan from member",
          "docLocation": "complete.md#L2740"
        },
        {
          "name": "purchasePlansWithCheckout",
          "signature": "purchasePlansWithCheckout({ priceIds: string[], successUrl?: string, cancelUrl?: string })",
          "returns": "Promise<PurchasePlanPayload>",
          "description": "Open Stripe checkout for plan purchase",
          "docLocation": "complete.md#L2783"
        },
        {
          "name": "launchStripeCustomerPortal",
          "signature": "launchStripeCustomerPortal({ returnUrl?: string })",
          "returns": "Promise<LaunchStripePortalPayload>",
          "description": "Open Stripe billing portal",
          "docLocation": "complete.md#L2936"
        }
      ]
    },
    "ui": {
      "description": "Pre-built UI components and modals",
      "methods": [
        {
          "name": "openModal",
          "signature": "openModal({ type: 'LOGIN' | 'SIGNUP' | 'PROFILE' })",
          "returns": "Promise<void>",
          "description": "Open pre-built modal",
          "docLocation": "complete.md#L3428"
        },
        {
          "name": "hideModal",
          "signature": "hideModal()",
          "returns": "void",
          "description": "Close currently open modal",
          "docLocation": "complete.md#L3522"
        }
      ]
    },
    "advanced": {
      "description": "Advanced features and team management",
      "methods": [
        {
          "name": "getSecureContent",
          "signature": "getSecureContent({ contentId: string })",
          "returns": "Promise<SecureContentPayload>",
          "description": "Fetch secure/gated content",
          "docLocation": "complete.md#L5206"
        },
        {
          "name": "joinTeam",
          "signature": "joinTeam({ inviteToken: string })",
          "returns": "Promise<JoinTeamPayload>",
          "description": "Join team with invite token",
          "docLocation": "complete.md#L5917"
        },
        {
          "name": "getTeam",
          "signature": "getTeam()",
          "returns": "Promise<{ data: Team }>",
          "description": "Get current team information",
          "docLocation": "complete.md#L5927"
        },
        {
          "name": "generateInviteToken",
          "signature": "generateInviteToken({ teamId: string })",
          "returns": "Promise<{ token: string }>",
          "description": "Generate team invite token",
          "docLocation": "complete.md#L5937"
        },
        {
          "name": "removeMemberFromTeam",
          "signature": "removeMemberFromTeam({ memberId: string, teamId: string })",
          "returns": "Promise<RemoveMemberPayload>",
          "description": "Remove member from team",
          "docLocation": "complete.md#L5947"
        }
      ]
    }
  },
  "searchKeywords": {
    "login": ["loginMemberEmailPassword", "loginMemberPasswordless", "loginWithProvider", "sendMemberLoginPasswordlessEmail"],
    "signup": ["signupMemberEmailPassword", "signupWithProvider"],
    "logout": ["logout"],
    "password": ["loginMemberEmailPassword", "signupMemberEmailPassword", "resetMemberPassword", "sendMemberResetPasswordEmail", "updateMemberAuth"],
    "email": ["loginMemberEmailPassword", "signupMemberEmailPassword", "sendMemberLoginPasswordlessEmail", "sendMemberResetPasswordEmail", "sendMemberVerificationEmail"],
    "social": ["loginWithProvider", "signupWithProvider"],
    "oauth": ["loginWithProvider", "signupWithProvider"],
    "google": ["loginWithProvider", "signupWithProvider"],
    "facebook": ["loginWithProvider", "signupWithProvider"],
    "member": ["getCurrentMember", "updateMember", "deleteMember", "getMemberJSON", "updateMemberJSON"],
    "profile": ["updateMember", "updateMemberProfileImage", "openModal"],
    "plan": ["getPlans", "getPlan", "addPlan", "removePlan", "purchasePlansWithCheckout"],
    "subscription": ["getPlans", "getPlan", "addPlan", "removePlan", "purchasePlansWithCheckout"],
    "billing": ["purchasePlansWithCheckout", "launchStripeCustomerPortal"],
    "payment": ["purchasePlansWithCheckout", "launchStripeCustomerPortal"],
    "stripe": ["purchasePlansWithCheckout", "launchStripeCustomerPortal"],
    "checkout": ["purchasePlansWithCheckout"],
    "modal": ["openModal", "hideModal"],
    "ui": ["openModal", "hideModal"],
    "team": ["joinTeam", "getTeam", "generateInviteToken", "removeMemberFromTeam"],
    "auth": ["onAuthChange", "updateMemberAuth"],
    "passwordless": ["loginMemberPasswordless", "sendMemberLoginPasswordlessEmail"],
    "verification": ["sendMemberVerificationEmail"],
    "reset": ["resetMemberPassword", "sendMemberResetPasswordEmail"],
    "update": ["updateMember", "updateMemberProfileImage", "updateMemberAuth", "updateMemberJSON"],
    "delete": ["deleteMember", "removeMemberFromTeam"],
    "get": ["getCurrentMember", "getPlans", "getPlan", "getMemberJSON", "getTeam", "getSecureContent"],
    "fetch": ["getCurrentMember", "getPlans", "getPlan", "getMemberJSON", "getTeam", "getSecureContent"]
  },
  "quickSearch": {
    "byReturnType": {
      "Promise<void>": ["logout", "loginWithProvider", "signupWithProvider", "openModal"],
      "Promise<Member>": ["getCurrentMember"],
      "Promise<Plan[]>": ["getPlans"],
      "Promise<Plan>": ["getPlan"],
      "void": ["hideModal"]
    },
    "byFeature": {
      "authentication": ["loginMemberEmailPassword", "signupMemberEmailPassword", "logout", "onAuthChange"],
      "passwordless": ["loginMemberPasswordless", "sendMemberLoginPasswordlessEmail"],
      "social": ["loginWithProvider", "signupWithProvider"],
      "memberData": ["getCurrentMember", "updateMember", "getMemberJSON", "updateMemberJSON"],
      "billing": ["purchasePlansWithCheckout", "launchStripeCustomerPortal"],
      "teams": ["joinTeam", "getTeam", "generateInviteToken", "removeMemberFromTeam"]
    }
  }
}